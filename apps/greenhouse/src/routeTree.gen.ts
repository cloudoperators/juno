/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as IndexImport } from "./routes/index"
import { Route as ExtensionIdImport } from "./routes/$extensionId.*"

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const ExtensionIdRoute = ExtensionIdImport.update({
  id: "/$extensionId/*",
  path: "/$extensionId/*",
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/"
      path: "/"
      fullPath: "/"
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/$extensionId/*": {
      id: "/$extensionId/*"
      path: "/$extensionId/*"
      fullPath: "/$extensionId/*"
      preLoaderRoute: typeof ExtensionIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute
  "/$extensionId/*": typeof ExtensionIdRoute
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute
  "/$extensionId/*": typeof ExtensionIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  "/": typeof IndexRoute
  "/$extensionId/*": typeof ExtensionIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: "/" | "/$extensionId/*"
  fileRoutesByTo: FileRoutesByTo
  to: "/" | "/$extensionId/*"
  id: "__root__" | "/" | "/$extensionId/*"
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExtensionIdRoute: typeof ExtensionIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExtensionIdRoute: ExtensionIdRoute,
}

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$extensionId/*"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$extensionId/*": {
      "filePath": "$extensionId.*.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
