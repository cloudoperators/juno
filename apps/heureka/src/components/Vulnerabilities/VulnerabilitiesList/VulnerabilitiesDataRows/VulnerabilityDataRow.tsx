/*
 * SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Juno contributors
 * SPDX-License-Identifier: Apache-2.0
 */

import React, { useState } from "react"
import { DataGridRow, DataGridCell, Stack, Icon, KnownIcons } from "@cloudoperators/juno-ui-components"
import { getSeverityColor, useTextOverflow } from "../../../../utils"
import { IssueTimestamp } from "../../../common/IssueTimestamp"
import { Vulnerability } from "../../utils"

type VulnerabilityDataRowProps = {
  vulnerability: Vulnerability
}

const cellSeverityClasses = (severity: string) => {
  let borderColor = getSeverityColor(severity || "none")

  return `
    border-l-2
    ${borderColor}
    h-full
    pl-5
  `
}

const getIconForSeverity = (severity: string) => {
  const severityLower = (severity || "none").toLowerCase()
  const iconColor = getSeverityColor(severity || "none")

  const iconMap: Record<string, KnownIcons> = {
    critical: "danger",
    high: "warning",
    medium: "errorOutline",
    low: "info",
    none: "help",
  }

  return <Icon icon={iconMap[severityLower] || "help"} color={iconColor} />
}

export const VulnerabilityDataRow = ({ vulnerability }: VulnerabilityDataRowProps) => {
  const [isExpanded, setIsExpanded] = useState(false)
  const { needsExpansion, textRef } = useTextOverflow(vulnerability.description)

  const toggleDescription = (e: React.MouseEvent) => {
    e.preventDefault()
    setIsExpanded(!isExpanded)
  }

  return (
    <DataGridRow>
      <DataGridCell className="pl-0">
        <div className={cellSeverityClasses(vulnerability.severity)}>{getIconForSeverity(vulnerability.severity)}</div>
      </DataGridCell>

      <DataGridCell className="whitespace-nowrap">
        <Stack gap="2" direction="vertical">
          <span>{vulnerability.name}</span>
          {vulnerability.sourceUrl && vulnerability.sourceUrl !== "-" && (
            <a href={vulnerability.sourceUrl} target="_blank" rel="noopener noreferrer" className="link-hover">
              <Stack gap="1.5" alignment="center">
                <Icon icon="openInNew" size="16" />
                <span>Issue source</span>
              </Stack>
            </a>
          )}
        </Stack>
      </DataGridCell>

      <DataGridCell className="whitespace-nowrap">
        <span>{vulnerability.servicesCount}</span>
      </DataGridCell>

      <DataGridCell className="whitespace-nowrap">
        <IssueTimestamp targetDate={vulnerability.earliestTargetRemediationDate} />
      </DataGridCell>

      <DataGridCell>
        <Stack gap="2" direction="vertical">
          <span ref={textRef} className={isExpanded ? "" : "whitespace-nowrap overflow-hidden text-ellipsis"}>
            {vulnerability.description}
          </span>
          {vulnerability.description && needsExpansion && (
            <a href="#" onClick={toggleDescription} className="link-hover">
              <Stack alignment="center">
                {isExpanded ? "Show less" : "Show more"}
                <Icon color="global-text" icon={isExpanded ? "expandLess" : "expandMore"} />
              </Stack>
            </a>
          )}
        </Stack>
      </DataGridCell>
    </DataGridRow>
  )
}
