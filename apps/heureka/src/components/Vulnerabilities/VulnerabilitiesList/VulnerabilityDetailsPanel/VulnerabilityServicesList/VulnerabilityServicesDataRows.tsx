/*
 * SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Juno contributors
 * SPDX-License-Identifier: Apache-2.0
 */

import React, { use } from "react"
import { useNavigate } from "@tanstack/react-router"
import { DataGridRow, DataGridCell } from "@cloudoperators/juno-ui-components"
import { Vulnerability } from "../../../utils"
import { ApolloQueryResult } from "@apollo/client"
import { GetVulnerabilitiesQuery } from "../../../../../generated/graphql"
import { getNormalizedVulnerabilitiesResponse } from "../../../utils"

type VulnerabilityServicesDataRowsProps = {
  vulnerabilitiesPromise: Promise<ApolloQueryResult<GetVulnerabilitiesQuery>>
  vulnerabilityName: string
  onServiceClick?: (serviceCcrn: string) => void
}

export const VulnerabilityServicesDataRows = ({
  vulnerabilitiesPromise,
  vulnerabilityName,
  onServiceClick,
}: VulnerabilityServicesDataRowsProps) => {
  const navigate = useNavigate()

  const handleServiceClick = (serviceCcrn: string) => {
    if (onServiceClick) {
      onServiceClick(serviceCcrn)
    } else {
      navigate({
        to: "/services/$service",
        params: { service: serviceCcrn },
      })
    }
  }

  // Use the promise passed from the parent
  const { data } = use(vulnerabilitiesPromise)

  // Get vulnerability data from the response
  const { vulnerabilities } = getNormalizedVulnerabilitiesResponse(data)
  const vulnerabilityData = vulnerabilities.find((vuln: Vulnerability) => vuln.name === vulnerabilityName)

  if (!vulnerabilityData) {
    return <div className="text-sm text-theme-light">Vulnerability not found: {vulnerabilityName}</div>
  }

  const services = vulnerabilityData.services || []
  const totalCount = vulnerabilityData.servicesCount || 0

  if (totalCount === 0) {
    return <div className="text-sm text-theme-light">No services affected by this vulnerability.</div>
  }

  return (
    <>
      {services.map((service, index) => (
        <DataGridRow key={index} className="cursor-pointer" onClick={() => handleServiceClick(service.ccrn)}>
          <DataGridCell className="whitespace-nowrap">{service.ccrn}</DataGridCell>
        </DataGridRow>
      ))}
    </>
  )
}
