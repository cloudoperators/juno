name: CI Check âœ…

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - changeset-release/main

permissions:
  contents: write
  pull-requests: write
  actions: read
  checks: write
  statuses: write

env:
  HUSKY: 0
  NODE_VERSION: "22.16.0"

jobs:
  reuse-compliance:
    uses: cloudoperators/common/.github/workflows/shared-reuse.yaml@main

  license-headers:
    permissions:
      contents: write
    uses: cloudoperators/common/.github/workflows/shared-license.yaml@main
    with:
      apply_header: false

  cache-dependencies:
    runs-on: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 #v4.3.0

      - name: Use Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 #v4.4.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda #v4.1.0
        with:
          version: 10.11.0

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 #v4.2.3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

  checks:
    needs: cache-dependencies
    runs-on: [ ubuntu-latest ]
    strategy:
      matrix:
        include:
          - title: "license-check"
            command: "pnpm run check-licenses"
          - title: "lint-check"
            command: "pnpm lint"
          - title: "type-check"
            command: "pnpm run typecheck"
          - title: "format-check"
            command: "pnpm run check-format --check '**/*.{js,jsx,ts,tsx}'"
          - title: "tests"
            command: "pnpm build && pnpm run test"

    name: ${{ matrix.title }}
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 #v4.3.0

      - name: Use Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 #v4.4.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda #v4.1.0
        with:
          version: 10.11.0

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 #v4.2.3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Run "${{ matrix.command }}" command
        run: ${{ matrix.command }}
