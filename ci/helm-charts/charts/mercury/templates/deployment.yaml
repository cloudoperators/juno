# prettier-ignore
kind: Deployment
apiVersion: apps/v1

metadata:
  name: juno-mercury
  namespace: juno

spec:
  selector:
    matchLabels:
      app: juno-mercury
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        app: juno-mercury
    spec:
      # The preStop hook below sleeps 30 seconds, extend the gracePeriod accordingly
      terminationGracePeriodSeconds: 60
      initContainers:
        # Wait for postgres pod
        - name: check-db-ready
          image: "{{ .Values.global.registry }}/postgres:9.5"
          command: 
            - sh 
            - -c 
            - until pg_isready -h $JUNO_MERCURY_POSTGRESQL_SERVICE_HOST -p $JUNO_MERCURY_POSTGRESQL_SERVICE_PORT; 
              do echo waiting for database; sleep 2; done;
        # migrate db          
        - name: migrate-db
          image: "{{ .Values.global.registry }}/juno-mercury:{{ .Values.image_tag }}"
          command: ['sh', '-c', "yarn workspace mercury db:migrate"]
          env:
            - name: APP_PORT
              value: "5000"
            - name: DB_USER
              value: {{ .Values.postgresql.user }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql.fullname" . }}
                  key: postgres-password
            - name: DB_NAME
              value: {{ .Values.postgresql.database }}
      # run app         
      containers:
        - name: mercury
          image: "{{ .Values.global.registry }}/juno-mercury:{{ .Values.image_tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
          env:
            - name: APP_PORT
              value: "5000"
            - name: DB_USER
              value: {{ .Values.postgresql.user }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "postgresql.fullname" . }}
                  key: postgres-password
            - name: DB_NAME
              value: {{ .Values.postgresql.database }}


          livenessProbe:
            httpGet:
              path: /
              port: 5000
            timeoutSeconds: 10
            periodSeconds: 60
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            timeoutSeconds: 5
            periodSeconds: 5
          resources:
{{ toYaml .Values.resources | indent 12 }}    
          lifecycle:
            preStop:
              exec:
                #Give the ingress some time to reload its config
                command: ["/bin/sh", "-c", "sleep 30"]
