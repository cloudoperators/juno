# prettier-ignore

jobs:
  - name: README
    serial: true
    plan:
      - task: describe-this-pipeline
        config:
          platform: "linux"
          image_resource:
            type: docker-image
            source:
              repository: alpine
              tag: latest
          run:
            path: /bin/echo
            args:
              - -e
              - '\tThis pipeline is defined at: https://github.com/sapcc/juno/ci/\n\n'
              - '\tManage Juno images: https://keppel.eu-de-1.cloud.sap/ccloud/juno-dashboard\n'

  - name: build unit-test-image
    public: true
    plan:
      - get: test-image-source.git
        trigger: true

      - put: juno-unit-test.image
        params:
          tag_as_latest: true
          cache: true
          cache_tag: "latest"
          build: test-image-source.git
          dockerfile: test-image-source.git/ci/Dockerfile.test

  - name: unit-test dashboard
    public: true
    plan:
      - get: juno-unit-test.image
        passed: ["build unit-test-image"]
        trigger: true
      - get: app-dashboard.git
        trigger: true

      - task: unit
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: keppel.eu-de-1.cloud.sap/ccloud/juno-unit-test
              tag: "latest"
          inputs:
            - name: app-dashboard.git
              path: /app/juno

          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd $PWD/app/juno/apps/dashboard
                ls -la
                yarn --dev && CI=true yarn test

  - name: build dashboard
    serial: true
    plan:
      - in_parallel:
          - get: app-dashboard.git
            passed: [unit-test dashboard]
            trigger: true
          - put: dashboard.version
      - in_parallel:
          - put: juno-dashboard.image
            params:
              tag_as_latest: true
              cache: true
              cache_tag: "latest"
              build: app-dashboard.git
              dockerfile: app-dashboard.git/ci/Dockerfile.dashboard
              tag: dashboard.version/version
            get_params:
              skip_download: true

  - name: vscan dashboard
    serial: true
    plan:
      - in_parallel:
          - get: secrets.git
            params:
              depth: 100
          - get: dashboard.version
            passed: [build dashboard]
            trigger: true
      - task: scan-image
        file: secrets.git/ci/shared/task-vscan.yaml
        input_mapping:
          image.version: dashboard.version
        params:
          IMAGE_NAME: keppel.eu-de-1.cloud.sap/ccloud/juno-dashboard


  - name: unit-test auth
    public: true
    plan:
      - get: juno-unit-test.image
        passed: ["build unit-test-image"]
        trigger: true
      - get: app-auth.git
        trigger: true

      - task: unit
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: keppel.eu-de-1.cloud.sap/ccloud/juno-unit-test
              tag: "latest"
          inputs:
            - name: app-auth.git
              path: /app/juno

          run:
            path: /bin/sh
            args:
              - -c
              - |
                cd $PWD/app/juno/apps/auth
                ls -la
                yarn --dev && CI=true yarn test

  - name: build auth
    public: true
    plan:
      - get: app-auth.git
        passed: ["unit-test auth"]
        trigger: true

      - put: juno-auth.image
        params:
          tag_as_latest: true
          cache: true
          cache_tag: "latest"
          build: app-auth.git/apps/auth
          dockerfile: app-auth.git/ci/Dockerfile.app

  - name: vscan auth
    serial: true
    plan:
      - in_parallel:
          - get: app-auth.git
            passed: ["build auth"]
            trigger: true

          - get: secrets.git
            params:
              depth: 100
      - task: scan-image
        file: secrets.git/ci/shared/task-vscan.yaml
        input_mapping:
          image.version: "latest"
        params:
          IMAGE_NAME: keppel.eu-de-1.cloud.sap/ccloud/juno-auth

  - name: combine apps
    public: true
    plan:
      - get: juno-auth.image
        passed: ["build auth"]
        trigger: true
      - get: ci.git  

      - task: copy build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: 
              repository: keppel.eu-de-1.cloud.sap/ccloud/juno-auth
              tag: "latest"
          run:
            path: /bin/sh
            # copy the previously created build of auth to output (named build)
            args:
              - -c
              - |
                cp -r /app/build /build/auth
          outputs:
            - name: build
              path: /app/build

      - put: juno-cdn.image
        params:
          tag_as_latest: true
          cache: true
          cache_tag: "latest"
          # use the created build in the task "copy build" as docker base folder
          # build contains a folder named as auth
          build: build
          dockerfile: ci.git/ci/Dockerfile.cdn


  - name: deploy to s-qa-de-1
    serial: true
    plan:
      - in_parallel:
          - get: dashboard.version
            trigger: true
            passed: ["vscan dashboard"]
          - get: ci.git
          - get: secrets.git
            params:
              depth: 100

      - task: deploy
        file: secrets.git/ci/shared/task-helm-upgrade.yaml
        input_mapping:
          app.version: dashboard.version
          helm-charts.git: ci.git

        params:
          CHART_PATH: ci/helm-charts
          RELEASE: juno
          NAMESPACE: juno
          REGION: qa-de-1
          CONTEXT: s-qa-de-1
          TAG_VARIABLE: image.tag
          VALUES: local:globals
          KUBELOGON_USER: {{unified-kubernetes-scaleout-username}}
          KUBELOGON_PASSWORD: {{unified-kubernetes-scaleout-password}}
    ensure:
      put: qa-de-1.release

  - name: deploy to s-eu-nl-1
    serial: true
    plan:
      - in_parallel:
          - get: dashboard.version
            passed: ["deploy to s-qa-de-1"]
          - get: app-dashboard.git
          - get: secrets.git
            params:
              depth: 100

      - task: replicate image to target region
        file: secrets.git/ci/shared/task-replicate-image.yaml
        input_mapping:
          app.version: dashboard.version
        params:
          REGION: eu-nl-1
          IMAGE: juno-dashboard

      - task: deploy
        file: secrets.git/ci/shared/task-helm-upgrade.yaml
        input_mapping:
          helm-charts.git: app-dashboard.git
          app.version: version

        params:
          CHART_PATH: ci/helm-charts
          RELEASE: juno
          NAMESPACE: juno
          REGION: eu-nl-1
          CONTEXT: s-eu-nl-1
          TAG_VARIABLE: image.tag
          VALUES: local:globals
          KUBELOGON_USER: {{unified-kubernetes-scaleout-username}}
          KUBELOGON_PASSWORD: {{unified-kubernetes-scaleout-password}}
    ensure:
      put: eu-nl-1.release

resources:
  - name: qa-de-1.release
    type: release
    check_every: 525600h # basically never (check is a no-op anyway)
    source: { region: "qa-de-1" }

  - name: eu-nl-1.release
    type: release
    check_every: 525600h # basically never (check is a no-op anyway)
    source: { region: "eu-nl-1" }


  - name: test-image-source.git
    type: git
    source:
      uri: https://github.com/sapcc/juno.git
      branch: main
      paths: ["ci/Dockerfile.test"]
      username: sapcc-bot
      password: {{real-github-access-token}}

  - name: app-dashboard.git
    type: git
    source:
      uri: https://github.com/sapcc/juno.git
      branch: main
      paths: ["apps/dashboard","ci"]
      username: sapcc-bot
      password: {{real-github-access-token}}
 
  - name: app-auth.git
    type: git
    source:
      uri: https://github.com/sapcc/juno.git
      branch: main
      paths: ["apps/auth","ci"]
      username: sapcc-bot
      password: {{real-github-access-token}}      

  - name: ci.git
    type: git
    source:
      uri: https://github.com/sapcc/juno.git
      branch: main
      paths: ["ci"]
      username: sapcc-bot
      password: {{real-github-access-token}}     

  - name: secrets.git
    type: git-proxy
    webhook_token: lfkhslkfhs
    check_every: 6h
    source:
      uri: git@github.wdf.sap.corp:cc/secrets.git
      branch: master
      private_key: {{secrets-ssh-key}}

  - name: dashboard.version
    type: time-version-resource
    check_every: 525600h

  - name: juno-dashboard.image
    type: docker-image
    check_every: 24h
    source:
      username: {{keppel-username}}
      password: {{keppel-password}}
      repository: keppel.eu-de-1.cloud.sap/ccloud/juno-dashboard

  - name: juno-auth.image
    type: docker-image
    source:
      username: {{keppel-username}}
      password: {{keppel-password}}
      repository: keppel.eu-de-1.cloud.sap/ccloud/juno-auth     

  - name: juno-cdn.image
    type: docker-image
    source:
      username: {{keppel-username}}
      password: {{keppel-password}}
      repository: keppel.eu-de-1.cloud.sap/ccloud/juno-cdn     

  - name: juno-unit-test.image
    type: docker-image
    check_every: 24h
    source:
      username: {{keppel-username}}
      password: {{keppel-password}}
      repository: keppel.eu-de-1.cloud.sap/ccloud/juno-unit-test

resource_types:
  - name: git-proxy
    type: registry-image
    check_every: 24h
    source:
      repository: keppel.eu-de-1.cloud.sap/ccloud-dockerhub-mirror/sapcc/concourse-git-resource-proxy

  - name: time-version-resource
    type: docker-image
    check_every: 24h
    source:
      repository: keppel.eu-de-1.cloud.sap/ccloud/concourse-time-version-resource
      tag: v2

  - name: release
    type: docker-image
    check_every: 24h
    source:
      repository: keppel.eu-de-1.cloud.sap/ccloud/concourse-release-resource
      tag: v1.1
