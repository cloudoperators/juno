(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&a(n)}).observe(document,{childList:!0,subtree:!0});function u(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function a(e){if(e.ep)return;e.ep=!0;const t=u(e);fetch(e.href,t)}})();const g="modulepreload",v=function(s,r){return new URL(s,r).href},h={},P=function(r,u,a){let e=Promise.resolve();if(u&&u.length>0){let y=function(o){return Promise.all(o.map(l=>Promise.resolve(l).then(f=>({status:"fulfilled",value:f}),f=>({status:"rejected",reason:f}))))};const n=document.getElementsByTagName("link"),i=document.querySelector("meta[property=csp-nonce]"),p=i?.nonce||i?.getAttribute("nonce");e=y(u.map(o=>{if(o=v(o,a),o in h)return;h[o]=!0;const l=o.endsWith(".css"),f=l?'[rel="stylesheet"]':"";if(!!a)for(let d=n.length-1;d>=0;d--){const m=n[d];if(m.href===o&&(!l||m.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${o}"]${f}`))return;const c=document.createElement("link");if(c.rel=l?"stylesheet":g,l||(c.as="script"),c.crossOrigin="",c.href=o,p&&c.setAttribute("nonce",p),document.head.appendChild(c),l)return new Promise((d,m)=>{c.addEventListener("load",d),c.addEventListener("error",()=>m(new Error(`Unable to preload CSS for ${o}`)))})}))}function t(n){const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=n,window.dispatchEvent(i),!i.defaultPrevented)throw n}return e.then(n=>{for(const i of n||[])i.status==="rejected"&&t(i.reason);return r().catch(t)})};fetch("./appProps.json").then(s=>s.json()).catch(s=>{console.warn("No appProps found, using default props",s.message)}).then(s=>{P(()=>import("./index-CMDIP742.js").then(r=>r.i),[],import.meta.url).then(r=>{r.mount(document.getElementById("root"),{props:s})})});export{P as _};
