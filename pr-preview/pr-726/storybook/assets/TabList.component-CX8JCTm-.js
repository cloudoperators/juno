import{j as o}from"./jsx-runtime-D6fbYt3N.js";import{b as v,c as x}from"./TabPanel-SXlHHxNZ.js";import{e as d,r as i}from"./index-DysCNOs_.js";const c=d.createContext({}),y=()=>d.useContext(c),l=({children:e=null,defaultIndex:n,selectedIndex:t,onSelect:s,variant:a="content",className:u="",...b})=>{const[m,p]=i.useState(t);i.useEffect(()=>{p(t)},[t]);const h=f=>{s&&s(f)},T={variant:a};return o.jsx(c.Provider,{value:T,children:o.jsx(v,{className:`juno-tabs juno-tabs-${a} ${u}`,defaultIndex:n,selectedIndex:m,onSelect:h,...b,children:e})})};l.tabsRole="Tabs";try{l.displayName="Tabs",l.__docgenInfo={description:`A Tabs component.
The parent wrapping TabList, Tab, and TabPanel subcomponents.
For a navigation that looks like tabs, but runs onClick handlers or contains hrefs, use TabNavigation instead.
Tabs are used to provide a tabbed section within the content area when combining static content and tabbed content on the same page. You will probably want to use a 'Container' (px=false) inside the TabPanels to get nice padding.`,displayName:"Tabs",props:{children:{defaultValue:{value:"null"},description:"All the child elements of the Tabs: Tab(s) inside a TabList and TabPanel(s)",name:"children",required:!1,type:{name:"TabElement"}},defaultIndex:{defaultValue:null,description:'The index of the Tab to be selected by default in "Uncontrolled Mode" (default) where Tabs handle their state internally. Do not use in "Controlled Mode".',name:"defaultIndex",required:!1,type:{name:"number"}},selectedIndex:{defaultValue:null,description:'The index of the Tab to be selected by default. This enables "Controlled Mode" where the developer takes over control of the Tabs state and behaviour. Requires onSelect to be set.',name:"selectedIndex",required:!1,type:{name:"number"}},onSelect:{defaultValue:null,description:'Handler required in "Controlled Mode"',name:"onSelect",required:!1,type:{name:"OnSelectHander"}},variant:{defaultValue:{value:"content"},description:"Switch on Main Tab styles and context if needed",name:"variant",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"main"'},{value:'"codeblocks"'}]}},className:{defaultValue:{value:""},description:"Add a custom className to the whole Tabs construct",name:"className",required:!1,type:{name:"string"}}}}}catch{}const g=`
  jn-flex
  jn-h-[3.4375rem]
`,j=e=>{switch(e){case"main":return"jn-bg-theme-tab-navigation-top";case"codeblocks":return`
        jn-text-sm
        jn-bg-theme-code-block
        jn-border-b-[1px]
        jn-border-theme-codeblock-bar 
      `;default:return`
        jn-border-b-[1px] 
        jn-border-theme-tab-navigation-content-bottom
      `}},r=({variant:e="content",children:n=null,...t})=>{const a=(y()||{}).variant||e;return o.jsx(x,{className:`juno-tablist juno-tablist-${a} ${g} ${j(a)}`,...t,children:n})};r.tabsRole="TabList";try{r.displayName="TabList",r.__docgenInfo={description:"A tabList component wraps all individual Tabs inside a parent Tabs component",displayName:"TabList",props:{variant:{defaultValue:{value:"content"},description:"Pick the TabList style",name:"variant",required:!1,type:{name:"enum",value:[{value:'"content"'},{value:'"main"'},{value:'"codeblocks"'}]}},children:{defaultValue:{value:"null"},description:"The individual child Tabs to render",name:"children",required:!1,type:{name:"ReactElement<TabProps, string | JSXElementConstructor<any>> | ReactElement<TabProps, string | JSXElementConstructor<any>>[]"}}}}}catch{}export{l as T,r as a};
