"use strict";(self.webpackChunk_cloudoperators_juno_ui_components=self.webpackChunk_cloudoperators_juno_ui_components||[]).push([[291],{"./src/components/Badge/Badge.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Danger:()=>Danger,DangerWithIcon:()=>DangerWithIcon,Error:()=>Error,ErrorWithIcon:()=>ErrorWithIcon,Info:()=>Info,InfoWithIcon:()=>InfoWithIcon,Success:()=>Success,SuccessWithIcon:()=>SuccessWithIcon,Warning:()=>Warning,WarningWithIcon:()=>WarningWithIcon,WithAnyIcon:()=>WithAnyIcon,WithDefaultIcon:()=>WithDefaultIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Badge_stories});var Icon_component=__webpack_require__("./src/components/Icon/Icon.component.tsx"),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),__assign=(__webpack_require__("../../node_modules/react/index.js"),function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)}),__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},badgeVariantStyles={default:"jn-bg-theme-badge-default",info:"jn-bg-theme-info/25",success:"jn-bg-theme-success/25",warning:"jn-bg-theme-warning/25",danger:"jn-bg-theme-danger/25",error:"jn-bg-theme-error/25"},getVariantStyle=function(variant){return badgeVariantStyles[variant]||badgeVariantStyles.default},isValidIcon=function(icon){return new Set(Object.values(Icon_component.N)).has(icon)},Badge=function(_a){var _b=_a.variant,variant=void 0===_b?"default":_b,_c=_a.icon,icon=void 0!==_c&&_c,_d=_a.text,text=void 0===_d?"":_d,_e=_a.className,className=void 0===_e?"":_e,_f=_a.children,children=void 0===_f?null:_f,props=__rest(_a,["variant","icon","text","className","children"]),iconToRender=function(icon,variant){return"string"==typeof icon&&isValidIcon(icon)?icon:!0===icon?variant:void 0}(icon,variant),iconColor=function(icon,variant){if(!0===icon)return"jn-text-theme-".concat(variant)}(icon,variant);return(0,jsx_runtime.jsxs)("span",__assign({className:"\n        juno-badge \n        juno-badge-".concat(variant," \n        ").concat("\n  jn-rounded\n  jn-text-sm\n  jn-text-theme-default\n  jn-py-0.5\n  jn-px-1\n  jn-justify-center\n  jn-items-center\n"," \n        ").concat(getVariantStyle(variant)," \n        ").concat(icon?"jn-inline-flex":""," \n        ").concat(className)},props,{children:[iconToRender&&(0,jsx_runtime.jsx)(Icon_component.I,{icon:iconToRender,size:"1.125rem",className:"jn-mr-1 jn-items-center",color:iconColor}),children||text]}))};try{Badge.displayName="Badge",Badge.__docgenInfo={description:"A Badge is used to visually represent properties or states of an entity.\nIt supports multiple semantic versions, each with distinct styling.\nOptionally, an icon can be included to further emphasize the meaning.",displayName:"Badge",props:{variant:{defaultValue:{value:"default"},description:"Specify an optional semantic variant that determines the appearance of a badge.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"info"'},{value:'"warning"'},{value:'"danger"'},{value:'"error"'},{value:'"success"'},{value:'"default"'}]}},icon:{defaultValue:{value:"false"},description:"Optional.\nIf true, an icon corresponding to the variant will be displayed.\nIf a string is provided and it's a valid icon name, that icon will be displayed.",name:"icon",required:!1,type:{name:'boolean | "info" | "warning" | "danger" | "error" | "success" | "search" | "accessTime" | "accountCircle" | "addCircle" | "autoAwesomeMosaic" | "autoAwesomeMotion" | "bolt" | ... 39 more ...'}},text:{defaultValue:{value:""},description:"Pass an optional string of text to be rendered as content.\nAlternatively, content can be passed as children (see below).\nIf children are provided, they will take precedence.",name:"text",required:!1,type:{name:"string"}},className:{defaultValue:{value:""},description:"Pass an optional CSS class to apply to the message.",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:{value:"null"},description:"Pass optional React nodes or a collection of React nodes to be rendered as content.\nTakes precedence over the text property.",name:"children",required:!1,type:{name:"any"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/Badge/Badge.component.tsx#Badge"]={docgenInfo:Badge.__docgenInfo,name:"Badge",path:"src/components/Badge/Badge.component.tsx#Badge"})}catch(__react_docgen_typescript_loader_error){}const Badge_stories={title:"Components/Badge",component:Badge,parameters:{text:"default"},argTypes:{icon:{options:function(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))}(["default"],Object.values(Icon_component.N),!0),control:{type:"select"}},children:{control:!1}}};var WithDefaultIcon={args:{text:"With Icon",icon:!0}},WithAnyIcon={args:{text:"Deleted",icon:"deleteForever"}},Info={args:{variant:"info",text:"Info"}},InfoWithIcon={args:{variant:"info",text:"Info",icon:!0}},Success={args:{variant:"success",text:"Success"}},SuccessWithIcon={args:{variant:"success",text:"Success",icon:!0}},Warning={args:{variant:"warning",text:"Warning"}},WarningWithIcon={args:{variant:"warning",text:"Warning",icon:!0}},Danger={args:{variant:"danger",text:"Danger"}},DangerWithIcon={args:{variant:"danger",text:"Danger",icon:!0}},Error={args:{variant:"error",text:"Error"}},ErrorWithIcon={args:{variant:"error",text:"Error",icon:!0}};const __namedExportsOrder=["WithDefaultIcon","WithAnyIcon","Info","InfoWithIcon","Success","SuccessWithIcon","Warning","WarningWithIcon","Danger","DangerWithIcon","Error","ErrorWithIcon"];WithDefaultIcon.parameters={...WithDefaultIcon.parameters,docs:{...WithDefaultIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    text: "With Icon",\n    icon: true // Default icon based on variant\n  }\n}',...WithDefaultIcon.parameters?.docs?.source}}},WithAnyIcon.parameters={...WithAnyIcon.parameters,docs:{...WithAnyIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    text: "Deleted",\n    icon: "deleteForever"\n  }\n}',...WithAnyIcon.parameters?.docs?.source}}},Info.parameters={...Info.parameters,docs:{...Info.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "info",\n    text: "Info"\n  }\n}',...Info.parameters?.docs?.source}}},InfoWithIcon.parameters={...InfoWithIcon.parameters,docs:{...InfoWithIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "info",\n    text: "Info",\n    icon: true\n  }\n}',...InfoWithIcon.parameters?.docs?.source}}},Success.parameters={...Success.parameters,docs:{...Success.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "success",\n    text: "Success"\n  }\n}',...Success.parameters?.docs?.source}}},SuccessWithIcon.parameters={...SuccessWithIcon.parameters,docs:{...SuccessWithIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "success",\n    text: "Success",\n    icon: true\n  }\n}',...SuccessWithIcon.parameters?.docs?.source}}},Warning.parameters={...Warning.parameters,docs:{...Warning.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "warning",\n    text: "Warning"\n  }\n}',...Warning.parameters?.docs?.source}}},WarningWithIcon.parameters={...WarningWithIcon.parameters,docs:{...WarningWithIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "warning",\n    text: "Warning",\n    icon: true\n  }\n}',...WarningWithIcon.parameters?.docs?.source}}},Danger.parameters={...Danger.parameters,docs:{...Danger.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "danger",\n    text: "Danger"\n  }\n}',...Danger.parameters?.docs?.source}}},DangerWithIcon.parameters={...DangerWithIcon.parameters,docs:{...DangerWithIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "danger",\n    text: "Danger",\n    icon: true\n  }\n}',...DangerWithIcon.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "error",\n    text: "Error"\n  }\n}',...Error.parameters?.docs?.source}}},ErrorWithIcon.parameters={...ErrorWithIcon.parameters,docs:{...ErrorWithIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    variant: "error",\n    text: "Error",\n    icon: true\n  }\n}',...ErrorWithIcon.parameters?.docs?.source}}}}}]);