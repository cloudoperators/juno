"use strict";(self.webpackChunk_cloudoperators_juno_ui_components=self.webpackChunk_cloudoperators_juno_ui_components||[]).push([[9071],{"./src/components/Code/Code.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithChildren:()=>WithChildren,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Code_stories});__webpack_require__("../../node_modules/react/index.js");var prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const Code=_ref=>{let{content="",children=null,className="",...props}=_ref;return(0,jsx_runtime.jsx)("code",{className:`juno-code \n  jn-bg-theme-code-block\n  jn-text-sm\n ${className}`,...props,children:content||children})};Code.displayName="Code",Code.propTypes={content:prop_types_default().string,className:prop_types_default().string,children:prop_types_default().node},Code.__docgenInfo={description:'A basic inline <code> component.\n  Accepts "content" prop or renders children as passed.',methods:[],displayName:"Code",props:{content:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},children:{defaultValue:{value:"null",computed:!1},description:"",type:{name:"node"},required:!1},className:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1}}};const Code_stories={title:"Components/Code",component:Code,argTypes:{children:{control:!1}}},Default={parameters:{docs:{description:{story:"Default inline code"}}},args:{content:"<span>Some code passed as content prop.</span>"}},WithChildren={parameters:{docs:{description:{story:"Inline code with children"}}},args:{children:"<Code>Some code with children</Code>"}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: "Default inline code"\n      }\n    }\n  },\n  args: {\n    content: "<span>Some code passed as content prop.</span>"\n  }\n}',...Default.parameters?.docs?.source}}},WithChildren.parameters={...WithChildren.parameters,docs:{...WithChildren.parameters?.docs,source:{originalSource:'{\n  parameters: {\n    docs: {\n      description: {\n        story: "Inline code with children"\n      }\n    }\n  },\n  args: {\n    children: "<Code>Some code with children</Code>"\n  }\n}',...WithChildren.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithChildren"]}}]);