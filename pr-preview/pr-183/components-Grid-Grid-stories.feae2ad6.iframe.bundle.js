"use strict";(self.webpackChunk_cloudoperators_juno_ui_components=self.webpackChunk_cloudoperators_juno_ui_components||[]).push([[1249],{"./src/components/Grid/Grid.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Auto:()=>Auto,Default:()=>Default,MixedAutoGrid:()=>MixedAutoGrid,MixedGrid:()=>MixedGrid,NestedGrid:()=>NestedGrid,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Grid_stories});__webpack_require__("../../node_modules/react/index.js");var prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const Grid=_ref=>{let{auto=!1,children=null,className="",...props}=_ref;const gridStyles=auto?{"--grid-column-flex-grow":"1","--grid-column-flex-shrink":"0","--grid-column-flex-basis":"0","--grid-column-default-width":"auto"}:{};return(0,jsx_runtime.jsx)("div",{className:`juno-grid ${className}`,style:gridStyles,...props,children})};Grid.displayName="Grid",Grid.propTypes={auto:prop_types_default().bool,children:prop_types_default().node,className:prop_types_default().string},Grid.__docgenInfo={description:"A general-use grid. Use in conjunction with GridColumn and GridRow.",methods:[],displayName:"Grid",props:{auto:{defaultValue:{value:"false",computed:!1},description:"Whether columns should auto-size or not, default is false. This effectively overrides the 12-columns default grid",type:{name:"bool"},required:!1},children:{defaultValue:{value:"null",computed:!1},description:"The children to render in the grid",type:{name:"node"},required:!1},className:{defaultValue:{value:'""',computed:!1},description:"Add a class to the grid container",type:{name:"string"},required:!1}}};var GridRow_component=__webpack_require__("./src/components/GridRow/GridRow.component.js"),GridColumn_component=__webpack_require__("./src/components/GridColumn/GridColumn.component.js");const Grid_stories={title:"Layout/Grid/Grid",component:Grid,argTypes:{children:{control:!1}},decorators:[Story=>(0,jsx_runtime.jsx)(Story,{className:"jn-bg-juno-blue-3 jn-text-juno-grey-blue"})]},Template=(args,context)=>(0,jsx_runtime.jsx)(Grid,{...args,className:context.className});Template.displayName="Template";const Default={render:Template,parameters:{docs:{description:{story:"By default, Juno uses a 12-column fluid grid. Columns can be made to span multiple columns by passing `cols={n}`."}}},args:{children:[(0,jsx_runtime.jsxs)(GridRow_component.T,{children:[(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"})]},"1"),(0,jsx_runtime.jsxs)(GridRow_component.T,{children:[(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{cols:3,children:"Column cols-3"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{cols:5,children:"Column cols-6"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{cols:2,children:"Column cols-2"})]},"2")]}},Auto={render:Template,parameters:{docs:{description:{story:"By passing `auto` to the grid, all of its contained columns will automatically size to share available space equally. Columns with `cols={n}` will switch their behaviour to auto-size."}}},args:{auto:!0,children:[(0,jsx_runtime.jsxs)(GridRow_component.T,{children:[(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"})]},"1"),(0,jsx_runtime.jsxs)(GridRow_component.T,{children:[(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"})]},"2"),(0,jsx_runtime.jsxs)(GridRow_component.T,{children:[(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"})]},"3")]}},MixedGrid={render:Template,args:{children:(0,jsx_runtime.jsxs)(GridRow_component.T,{children:[(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{auto:!0,children:"Auto Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{width:10,children:"Column 10%"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{cols:3,children:"Column cols-3"})]})}},MixedAutoGrid={render:Template,args:{auto:!0,children:(0,jsx_runtime.jsxs)(GridRow_component.T,{children:[(0,jsx_runtime.jsx)(GridColumn_component.H,{children:"Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{auto:!0,children:"Auto Column"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{width:10,children:"Column 10%"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{cols:3,children:"Column cols-3"})]})}},NestedGrid={render:Template,args:{children:(0,jsx_runtime.jsxs)(GridRow_component.T,{children:[(0,jsx_runtime.jsx)(GridColumn_component.H,{cols:3,children:"Column cols-3"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{cols:9,children:(0,jsx_runtime.jsx)(Grid,{children:(0,jsx_runtime.jsxs)(GridRow_component.T,{children:[(0,jsx_runtime.jsx)(GridColumn_component.H,{width:33.333333,className:"bg-juno-blue-2",children:"Nested Column 33.333333%"}),(0,jsx_runtime.jsx)(GridColumn_component.H,{width:66.666666,className:"bg-juno-blue-2",children:"Nested Column 66.666666%"})]})})})]})}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: Template,\n  parameters: {\n    docs: {\n      description: {\n        story: "By default, Juno uses a 12-column fluid grid. Columns can be made to span multiple columns by passing `cols={n}`."\n      }\n    }\n  },\n  args: {\n    children: [<GridRow key="1">\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n      </GridRow>, <GridRow key="2">\n        <GridColumn>Column</GridColumn>\n        <GridColumn cols={3}>Column cols-3</GridColumn>\n        <GridColumn cols={5}>Column cols-6</GridColumn>\n        <GridColumn cols={2}>Column cols-2</GridColumn>\n      </GridRow>]\n  }\n}',...Default.parameters?.docs?.source}}},Auto.parameters={...Auto.parameters,docs:{...Auto.parameters?.docs,source:{originalSource:'{\n  render: Template,\n  parameters: {\n    docs: {\n      description: {\n        story: "By passing `auto` to the grid, all of its contained columns will automatically size to share available space equally. Columns with `cols={n}` will switch their behaviour to auto-size."\n      }\n    }\n  },\n  args: {\n    auto: true,\n    children: [<GridRow key="1">\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n      </GridRow>, <GridRow key="2">\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n      </GridRow>, <GridRow key="3">\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n        <GridColumn>Column</GridColumn>\n      </GridRow>]\n  }\n}',...Auto.parameters?.docs?.source}}},MixedGrid.parameters={...MixedGrid.parameters,docs:{...MixedGrid.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    children: <GridRow>\n        <GridColumn>Column</GridColumn>\n        <GridColumn auto>Auto Column</GridColumn>\n        <GridColumn width={10}>Column 10%</GridColumn>\n        <GridColumn cols={3}>Column cols-3</GridColumn>\n      </GridRow>\n  }\n}",...MixedGrid.parameters?.docs?.source}}},MixedAutoGrid.parameters={...MixedAutoGrid.parameters,docs:{...MixedAutoGrid.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    auto: true,\n    children: <GridRow>\n        <GridColumn>Column</GridColumn>\n        <GridColumn auto>Auto Column</GridColumn>\n        <GridColumn width={10}>Column 10%</GridColumn>\n        <GridColumn cols={3}>Column cols-3</GridColumn>\n      </GridRow>\n  }\n}",...MixedAutoGrid.parameters?.docs?.source}}},NestedGrid.parameters={...NestedGrid.parameters,docs:{...NestedGrid.parameters?.docs,source:{originalSource:'{\n  render: Template,\n  args: {\n    children: <GridRow>\n        <GridColumn cols={3}>Column cols-3</GridColumn>\n        <GridColumn cols={9}>\n          <Grid>\n            <GridRow>\n              <GridColumn width={33.333333} className="bg-juno-blue-2">\n                Nested Column 33.333333%\n              </GridColumn>\n              <GridColumn width={66.666666} className="bg-juno-blue-2">\n                Nested Column 66.666666%\n              </GridColumn>\n            </GridRow>\n          </Grid>\n        </GridColumn>\n      </GridRow>\n  }\n}',...NestedGrid.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Auto","MixedGrid","MixedAutoGrid","NestedGrid"]},"./src/components/GridColumn/GridColumn.component.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>GridColumn});__webpack_require__("../../node_modules/react/index.js");var prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const colsClass=cols=>{switch(cols){case 1:return"\n\tjn-w-grid-col-1\n";case 2:return"\n\tjn-w-grid-col-2\n";case 3:return"\n\tjn-w-grid-col-3\n";case 4:return"\n\tjn-w-grid-col-4\n";case 5:case 6:return"\n\tjn-w-grid-col-6\n";case 7:return"\n\tjn-w-grid-col-7\n";case 8:return"\n\tjn-w-grid-col-8\n";case 9:return"\n\tjn-w-grid-col-9\n";case 10:return"\n\tjn-w-grid-col-10\n";case 11:return"\n\tjn-w-grid-col-11\n";case 12:return"\n\tjn-w-grid-col-12\n";default:return"jn-w-grid-column-default"}},GridColumn=_ref=>{let{width=null,cols=null,auto=!1,className="",children,...props}=_ref;const columnStyles=width?width?{width:width+"%",flexGrow:"0",flexShrink:"0",flexBasis:width+"%"}:{}:auto?{flexGrow:"1",flexShrink:"0",flexBasis:"0"}:{};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:`juno-grid-column \n\tjn-flex-grid-column\n\tjn-p-grid-column\n ${colsClass(cols)} ${className}`,style:columnStyles,...props,children})};GridColumn.displayName="GridColumn",GridColumn.propTypes={cols:prop_types__WEBPACK_IMPORTED_MODULE_2___default().number,width:prop_types__WEBPACK_IMPORTED_MODULE_2___default().number,auto:prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool,className:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string,children:prop_types__WEBPACK_IMPORTED_MODULE_2___default().node},GridColumn.__docgenInfo={description:"A grid column to be used inside a Grid.",methods:[],displayName:"GridColumn",props:{width:{defaultValue:{value:"null",computed:!1},description:'The width in percent as a number without "%" for auto-layout grids TODO: or "auto". If a width is given, it will override the "cols" prop.',type:{name:"number"},required:!1},cols:{defaultValue:{value:"null",computed:!1},description:"The number of columns to span the column over.",type:{name:"number"},required:!1},auto:{defaultValue:{value:"false",computed:!1},description:"Whether the colum should set an auto width",type:{name:"bool"},required:!1},className:{defaultValue:{value:'""',computed:!1},description:"Add a class to a grid column",type:{name:"string"},required:!1},children:{description:"Children to be rendered in the column element",type:{name:"node"},required:!1}}}},"./src/components/GridRow/GridRow.component.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{T:()=>GridRow});__webpack_require__("../../node_modules/react/index.js");var prop_types__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/jsx-runtime.js");const GridRow=_ref=>{let{children=null,className="",...props}=_ref;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div",{className:`juno-grid-row \n\tjn-flex\n\tjn-flex-wrap\n\tjn-m-grid-row\n ${className}`,...props,children})};GridRow.displayName="GridRow",GridRow.propTypes={children:prop_types__WEBPACK_IMPORTED_MODULE_2___default().node,className:prop_types__WEBPACK_IMPORTED_MODULE_2___default().string},GridRow.__docgenInfo={description:"A grid row to hold GridColumn elements inside a Grid.",methods:[],displayName:"GridRow",props:{children:{defaultValue:{value:"null",computed:!1},description:"The children to render in the grid row",type:{name:"node"},required:!1},className:{defaultValue:{value:'""',computed:!1},description:"Add a class to the grid row",type:{name:"string"},required:!1}}}}}]);