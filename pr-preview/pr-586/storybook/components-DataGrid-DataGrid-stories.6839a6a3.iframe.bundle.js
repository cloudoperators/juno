"use strict";(self.webpackChunk_cloudoperators_juno_ui_components=self.webpackChunk_cloudoperators_juno_ui_components||[]).push([[2401],{"./src/components/DataGrid/DataGrid.component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{t:()=>useDataGridContext,z:()=>DataGrid});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},__spreadArray=function(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))},gridTemplate=function(columns,columnMaxSize,columnMinSize,minContentColumns,gridColumnTemplate){if(gridColumnTemplate&&gridColumnTemplate.length>0)return{gridTemplateColumns:gridColumnTemplate};var generatedTemplate="";minContentColumns&&Array.isArray(minContentColumns)&&minContentColumns.length>0?__spreadArray([],Array(columns),!0).map((function(_,i){generatedTemplate+=minContentColumns.includes(i)?"min-content ":"minmax(".concat(columnMinSize,", ").concat(columnMaxSize,") ")})):generatedTemplate="repeat(".concat(columns,", minmax(").concat(columnMinSize,", ").concat(columnMaxSize,"))");return{gridTemplateColumns:generatedTemplate}},DataGridContext=react__WEBPACK_IMPORTED_MODULE_1__.createContext({}),useDataGridContext=function(){return react__WEBPACK_IMPORTED_MODULE_1__.useContext(DataGridContext)},DataGrid=function(_a){var _b=_a.columns,columns=void 0===_b?1:_b,_c=_a.columnMaxSize,columnMaxSize=void 0===_c?"auto":_c,_d=_a.columnMinSize,columnMinSize=void 0===_d?"0px":_d,minContentColumns=_a.minContentColumns,gridColumnTemplate=_a.gridColumnTemplate,_e=_a.cellVerticalAlignment,cellVerticalAlignment=void 0===_e?"center":_e,_f=_a.className,className=void 0===_f?"":_f,_g=_a.children,children=void 0===_g?null:_g,props=__rest(_a,["columns","columnMaxSize","columnMinSize","minContentColumns","gridColumnTemplate","cellVerticalAlignment","className","children"]),dataGridConf={cellVerticalAlignment};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DataGridContext.Provider,{value:dataGridConf,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",__assign({className:"juno-datagrid ".concat("\n\tjn-grid\n\tjn-items-stretch\n"," ").concat(className),style:gridTemplate(columns,columnMaxSize,columnMinSize,minContentColumns,gridColumnTemplate),role:"grid"},props,{children}))})};try{DataGrid.displayName="DataGrid",DataGrid.__docgenInfo={description:"The DataGrid component is the main way to display lists of items that have a bunch of metadata that you want to display.",displayName:"DataGrid",props:{columns:{defaultValue:{value:"1"},description:"Set number of columns",name:"columns",required:!1,type:{name:"number"}},columnMaxSize:{defaultValue:{value:"auto"},description:'Set column max sizing. Default: auto. For equally sized columns use "1fr"',name:"columnMaxSize",required:!1,type:{name:"string"}},columnMinSize:{defaultValue:{value:"0px"},description:"Set column minimum size. Default: 0px",name:"columnMinSize",required:!1,type:{name:"string"}},minContentColumns:{defaultValue:null,description:"Specify which columns should be sized by minimum content size (i.e. as small as possible). Pass an array of column numbers (first column is 0)",name:"minContentColumns",required:!1,type:{name:"number[]"}},gridColumnTemplate:{defaultValue:null,description:"Set the grid column template in CSS grid 'grid-template-columns' notation. If this prop is passed, all other template props (columns, columnMaxSize,\ncolumnMinSize, minContentColumns) are ignored. The easiest case where you might need this is e.g. if you want to set specific column widths for some\nor all columns, e.g. \"20% auto auto 10%\" (The first column is set to 20%, the next two to auto size, the last to 10%).",name:"gridColumnTemplate",required:!1,type:{name:"string"}},cellVerticalAlignment:{defaultValue:{value:"center"},description:"Set the vertical alignment for all GridCells. Default: center. PLEASE NOTE: the center alignment is achieved by using a flexbox column layout,\nwhich means that all child elements of the cell will be stacked vertically. To avoid this, wrap the elements in their own div",name:"cellVerticalAlignment",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"center"'}]}},children:{defaultValue:{value:"null"},description:"Children to render in the DataGrid",name:"children",required:!1,type:{name:"Element | (Element | Element[] | null)[] | null"}},className:{defaultValue:{value:""},description:"Add a class name",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DataGrid/DataGrid.component.tsx#DataGrid"]={docgenInfo:DataGrid.__docgenInfo,name:"DataGrid",path:"src/components/DataGrid/DataGrid.component.tsx#DataGrid"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/DataGrid/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{z:()=>_DataGrid_component__WEBPACK_IMPORTED_MODULE_0__.z});var _DataGrid_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/DataGrid/DataGrid.component.tsx")},"./src/components/DataGridCell/DataGridCell.component.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>DataGridCell});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/react/index.js"),_DataGrid_DataGrid_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/DataGrid/DataGrid.component.tsx"),__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},cellBaseStyles=function(nowrap,cellVerticalAlignment){return"\n\t\t".concat(nowrap?"jn-whitespace-nowrap":"","\n\t\t").concat("center"===cellVerticalAlignment?"\n\t\t\t\tjn-justify-center\n\t\t\t\tjn-flex\n\t\t\t\tjn-flex-col\t\t\n\t\t\t":"","\n\t\tjn-px-5\n\t\tjn-py-3\n\t\tjn-border-b\n\t\tjn-border-theme-background-lvl-2\n\t\tjn-h-full\n\t")},cellCustomStyles=function(colSpan){var styles;return colSpan&&(styles={gridColumn:"span ".concat(colSpan," / span ").concat(colSpan)}),styles},DataGridCell=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(_a,ref){var colSpan=_a.colSpan,_b=_a.nowrap,nowrap=void 0!==_b&&_b,_c=_a.className,className=void 0===_c?"":_c,_d=_a.children,children=void 0===_d?null:_d,props=__rest(_a,["colSpan","nowrap","className","children"]),cellVerticalAlignment=((0,_DataGrid_DataGrid_component__WEBPACK_IMPORTED_MODULE_2__.t)()||{}).cellVerticalAlignment;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",__assign({className:"juno-datagrid-cell ".concat(cellBaseStyles(nowrap,cellVerticalAlignment)," ").concat(className),style:cellCustomStyles(colSpan),role:"gridcell",ref},props,{children}))}));DataGridCell.displayName="DataGridCell";try{DataGridCell.displayName="DataGridCell",DataGridCell.__docgenInfo={description:"",displayName:"DataGridCell",props:{className:{defaultValue:{value:""},description:"Add a classname",name:"className",required:!1,type:{name:"string"}},children:{defaultValue:{value:"null"},description:"Children to render in the DataGridCell",name:"children",required:!1,type:{name:"any"}},colSpan:{defaultValue:null,description:"Add a col span to the cell. This works like a colspan in a normal html table, so you have to take care not to place too many cells in a row if some of them have a colspan.",name:"colSpan",required:!1,type:{name:"number"}},nowrap:{defaultValue:{value:"false"},description:"Set nowrap to true if the cell content shouldn't wrap (this is achieved by adding white-space: nowrap;)",name:"nowrap",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DataGridCell/DataGridCell.component.tsx#DataGridCell"]={docgenInfo:DataGridCell.__docgenInfo,name:"DataGridCell",path:"src/components/DataGridCell/DataGridCell.component.tsx#DataGridCell"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/DataGridCell/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>_DataGridCell_component__WEBPACK_IMPORTED_MODULE_0__.N});var _DataGridCell_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/components/DataGridCell/DataGridCell.component.tsx")},"./src/components/DataGridHeadCell/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>DataGridHeadCell});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react=__webpack_require__("../../node_modules/react/index.js"),DataGridCell=__webpack_require__("./src/components/DataGridCell/index.ts"),__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},DataGridHeadCell=(0,react.forwardRef)((function(_a,ref){var colSpan=_a.colSpan,_b=_a.nowrap,nowrap=void 0!==_b&&_b,_c=_a.className,className=void 0===_c?"":_c,_d=_a.children,children=void 0===_d?null:_d,props=__rest(_a,["colSpan","nowrap","className","children"]);return(0,jsx_runtime.jsx)(DataGridCell.N,__assign({colSpan,nowrap,className:"juno-datagrid-head-cell ".concat("\n\tjn-font-bold\n\tjn-text-theme-high\n\tjn-bg-theme-background-lvl-1\n\tjn-border-theme-background-lvl-0\n"," ").concat(className),role:"columnheader",ref},props,{children}))}));DataGridHeadCell.displayName="DataGridHeadCell";try{DataGridHeadCell.displayName="DataGridHeadCell",DataGridHeadCell.__docgenInfo={description:"",displayName:"DataGridHeadCell",props:{colSpan:{defaultValue:null,description:"Add a col span to the cell. This works like a colspan in a normal html table, so you have to take care not to place too many cells in a row if some of them have a colspan.",name:"colSpan",required:!1,type:{name:"number"}},nowrap:{defaultValue:{value:"false"},description:"Set nowrap to true if the cell content shouldn't wrap (this is achieved by adding white-space: nowrap;)",name:"nowrap",required:!1,type:{name:"boolean"}},children:{defaultValue:{value:"null"},description:"Children to render in the DataGridHeadCell",name:"children",required:!1,type:{name:"string | Element | null"}},className:{defaultValue:{value:""},description:"Add a classname",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DataGridHeadCell/DataGridHeadCell.component.tsx#DataGridHeadCell"]={docgenInfo:DataGridHeadCell.__docgenInfo,name:"DataGridHeadCell",path:"src/components/DataGridHeadCell/DataGridHeadCell.component.tsx#DataGridHeadCell"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/DataGridRow/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{r:()=>DataGridRow});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react=__webpack_require__("../../node_modules/react/index.js"),__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},DataGridRow=(0,react.forwardRef)((function(_a,ref){var _b=_a.className,className=void 0===_b?"":_b,_c=_a.children,children=void 0===_c?null:_c,props=__rest(_a,["className","children"]);return(0,jsx_runtime.jsx)("div",__assign({className:"juno-datagrid-row ".concat("\n\tjn-contents\n"," ").concat(className),role:"row",ref},props,{children}))}));DataGridRow.displayName="DataGridRow";try{DataGridRow.displayName="DataGridRow",DataGridRow.__docgenInfo={description:"",displayName:"DataGridRow",props:{children:{defaultValue:{value:"null"},description:"Children to render in the DataGridRow",name:"children",required:!1,type:{name:"Element | (Element | null)[] | null"}},className:{defaultValue:{value:""},description:"Add a classname",name:"className",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/DataGridRow/DataGridRow.component.tsx#DataGridRow"]={docgenInfo:DataGridRow.__docgenInfo,name:"DataGridRow",path:"src/components/DataGridRow/DataGridRow.component.tsx#DataGridRow"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/DataGrid/DataGrid.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ColSpanCell:()=>ColSpanCell,ColumnMinSize:()=>ColumnMinSize,CustomGridTemplate:()=>CustomGridTemplate,Default:()=>Default,EqualColumnSize:()=>EqualColumnSize,MinimumSizedColumns:()=>MinimumSizedColumns,NoHead:()=>NoHead,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/jsx-runtime.js"),_index__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("../../node_modules/react/index.js"),__webpack_require__("./src/components/DataGrid/index.ts")),_DataGridRow_index__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/DataGridRow/index.ts"),_DataGridCell_index__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/components/DataGridCell/index.ts"),_DataGridHeadCell_index__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./src/components/DataGridHeadCell/index.ts"),__assign=function(){return __assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t},__assign.apply(this,arguments)},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},__spreadArray=function(to,from,pack){if(pack||2===arguments.length)for(var ar,i=0,l=from.length;i<l;i++)!ar&&i in from||(ar||(ar=Array.prototype.slice.call(from,0,i)),ar[i]=from[i]);return to.concat(ar||Array.prototype.slice.call(from))};const __WEBPACK_DEFAULT_EXPORT__={title:"Components/DataGrid/DataGrid",component:_index__WEBPACK_IMPORTED_MODULE_2__.z,argTypes:{children:{control:!1}}};var Template=function(_a){var hideHead=_a.hideHead,includeColSpanRow=_a.includeColSpanRow,args=__rest(_a,["hideHead","includeColSpanRow"]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_index__WEBPACK_IMPORTED_MODULE_2__.z,__assign({},args,{children:[hideHead?null:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_DataGridRow_index__WEBPACK_IMPORTED_MODULE_3__.r,{children:__spreadArray([],Array(args.columns||3),!0).map((function(_,c){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_DataGridHeadCell_index__WEBPACK_IMPORTED_MODULE_5__.j,{children:"Head cell ".concat(c)},"h_".concat(c))}))}),includeColSpanRow?null:__spreadArray([],Array(4),!0).map((function(_,r){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_DataGridRow_index__WEBPACK_IMPORTED_MODULE_3__.r,{children:__spreadArray([],Array(args.columns||3),!0).map((function(_,c){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_DataGridCell_index__WEBPACK_IMPORTED_MODULE_4__.N,{children:c===args.columns-2?"Cell ".concat(r,"-").concat(c," has more content than others"):"Cell ".concat(r,"-").concat(c)},"b_".concat(r,"_").concat(c))}))},"b_".concat(r))})),includeColSpanRow?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_DataGridRow_index__WEBPACK_IMPORTED_MODULE_3__.r,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_DataGridCell_index__WEBPACK_IMPORTED_MODULE_4__.N,{colSpan:args.columns,children:"This is a cell with colspan spanning all available columns"})}):null]}))})},Default={render:Template,parameters:{docs:{description:{story:"Juno DataGrid for displaying data. Example with 5 columns."}}},args:{columns:5}},EqualColumnSize={render:Template,parameters:{docs:{description:{story:"Example: change column max size to '1fr'. This ensures that all columns get the same width, even if some columns have more content than others"}}},args:{columns:5,columnMaxSize:"1fr"}},ColumnMinSize={render:Template,parameters:{docs:{description:{story:"Example: set a minimum width for columns. Columns will always be at least this wide, even if they have very little content. This may cause horizontal scrollbars if the DataGrid doesn't fit into the container anymore"}}},args:{columns:5,columnMinSize:"300px"}},MinimumSizedColumns={render:Template,parameters:{docs:{description:{story:"Example: specify some columns that should be as small as possible (typically used for when you have a cell that contains only a button and you want to ensure the cell is only exactly as wide as the button"}}},args:{columns:5,minContentColumns:[0,4]}},CustomGridTemplate={render:Template,parameters:{docs:{description:{story:"Example: specify a completely custom css grid column template. The value passed is used for the css 'grid-template-columns' property. All other settings are ignored"}}},args:{gridColumnTemplate:"20% repeat(".concat(2,", auto)")}},NoHead={render:Template,parameters:{docs:{description:{story:"Without head cells"}}},args:{columns:5,hideHead:!0}},ColSpanCell={render:Template,parameters:{docs:{description:{story:"With a col span cell"}}},args:{columns:5,includeColSpanRow:!0}};const __namedExportsOrder=["Default","EqualColumnSize","ColumnMinSize","MinimumSizedColumns","CustomGridTemplate","NoHead","ColSpanCell"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: Template,\n  parameters: {\n    docs: {\n      description: {\n        story: "Juno DataGrid for displaying data. Example with 5 columns."\n      }\n    }\n  },\n  args: {\n    columns: 5\n  }\n}',...Default.parameters?.docs?.source}}},EqualColumnSize.parameters={...EqualColumnSize.parameters,docs:{...EqualColumnSize.parameters?.docs,source:{originalSource:'{\n  render: Template,\n  parameters: {\n    docs: {\n      description: {\n        story: "Example: change column max size to \'1fr\'. This ensures that all columns get the same width, even if some columns have more content than others"\n      }\n    }\n  },\n  args: {\n    columns: 5,\n    columnMaxSize: "1fr"\n  }\n}',...EqualColumnSize.parameters?.docs?.source}}},ColumnMinSize.parameters={...ColumnMinSize.parameters,docs:{...ColumnMinSize.parameters?.docs,source:{originalSource:'{\n  render: Template,\n  parameters: {\n    docs: {\n      description: {\n        story: "Example: set a minimum width for columns. Columns will always be at least this wide, even if they have very little content. This may cause horizontal scrollbars if the DataGrid doesn\'t fit into the container anymore"\n      }\n    }\n  },\n  args: {\n    columns: 5,\n    columnMinSize: "300px"\n  }\n}',...ColumnMinSize.parameters?.docs?.source}}},MinimumSizedColumns.parameters={...MinimumSizedColumns.parameters,docs:{...MinimumSizedColumns.parameters?.docs,source:{originalSource:'{\n  render: Template,\n  parameters: {\n    docs: {\n      description: {\n        story: "Example: specify some columns that should be as small as possible (typically used for when you have a cell that contains only a button and you want to ensure the cell is only exactly as wide as the button"\n      }\n    }\n  },\n  args: {\n    columns: 5,\n    minContentColumns: [0, 4]\n  }\n}',...MinimumSizedColumns.parameters?.docs?.source}}},CustomGridTemplate.parameters={...CustomGridTemplate.parameters,docs:{...CustomGridTemplate.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  parameters: {\n    docs: {\n      description: {\n        story: \"Example: specify a completely custom css grid column template. The value passed is used for the css 'grid-template-columns' property. All other settings are ignored\"\n      }\n    }\n  },\n  args: {\n    gridColumnTemplate: `20% repeat(${defaultColumns - 1}, auto)`\n  }\n}",...CustomGridTemplate.parameters?.docs?.source}}},NoHead.parameters={...NoHead.parameters,docs:{...NoHead.parameters?.docs,source:{originalSource:'{\n  render: Template,\n  parameters: {\n    docs: {\n      description: {\n        story: "Without head cells"\n      }\n    }\n  },\n  args: {\n    columns: 5,\n    hideHead: true\n  }\n}',...NoHead.parameters?.docs?.source}}},ColSpanCell.parameters={...ColSpanCell.parameters,docs:{...ColSpanCell.parameters?.docs,source:{originalSource:'{\n  render: Template,\n  parameters: {\n    docs: {\n      description: {\n        story: "With a col span cell"\n      }\n    }\n  },\n  args: {\n    columns: 5,\n    includeColSpanRow: true\n  }\n}',...ColSpanCell.parameters?.docs?.source}}}}}]);