import{r as n,j as f}from"./iframe-CqnCaJ0E.js";const u=n.createContext(void 0),v=({activeItem:t="",ariaLabel:r="",children:h,className:y="",disabled:l=!1,onActiveItemChange:p,...N})=>{const[I,c]=n.useState(""),[d,b]=n.useState(new Map),g=e=>{const a=typeof e=="string"||typeof e=="number"?String(e):JSON.stringify(e),o=["value","children","label"],i=Array.from(d.keys());if(i.includes(a))return a;{let s;for(const V of i){const m=d.get(V);o.forEach(j=>{m&&m[j]===a&&(s=m.id)})}return s}};n.useEffect(()=>{if(t){const e=g(String(t));c(e)}},[t]),n.useEffect(()=>{if(t){const e=g(String(t));c(e)}},[d]);const _=(e,a,o,i)=>{b(s=>new Map(s).set(e,{id:e,value:i,label:o,children:a,displayName:a||o||i}))},x=e=>{c(e),p&&p(e)};return f.jsx(u.Provider,{value:{activeItem:I,addItem:_,handleActiveItemChange:x,navigationDisabled:l},children:f.jsx("ul",{"aria-disabled":!!l,"aria-label":r&&r.length?r:"",className:`juno-navigation 
          ${l?"juno-navigation-disabled":""} 
          ${y}`,role:"navigation",...N,children:h})})};try{u.displayName="NavigationContext",u.__docgenInfo={description:"",displayName:"NavigationContext",props:{}}}catch{}try{v.displayName="Navigation",v.__docgenInfo={description:"A generic Navigation component providing all the necessary functionality for a navigation. For internal use only. Not to be used directly, but to be wrapped by more role-specific / semantic navigation components such as `TabNavigation`, `TopNavigation`, `SideNavigation`.",displayName:"Navigation",props:{activeItem:{defaultValue:{value:""},description:"The currently active item. Pass the `value`, `label` prop, or the child string of the respective NavigationItem.",name:"activeItem",required:!1,type:{name:"ReactNode"}},ariaLabel:{defaultValue:{value:""},description:"The aria label of the navigation",name:"ariaLabel",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The child navigation items of the navigation",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:{value:""},description:"Pass a custom className to the navigation parent element",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Whether the navigation is disabled. Will disable all children.",name:"disabled",required:!1,type:{name:"boolean"}},onActiveItemChange:{defaultValue:null,description:"Handler to execute when the active item changes.",name:"onActiveItemChange",required:!1,type:{name:"ItemChangeHandler"}}}}}catch{}export{u as N,v as a};
