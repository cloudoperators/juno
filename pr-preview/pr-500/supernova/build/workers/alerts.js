function m(r){let e={serviceName:null,initialFetch:!0,fetchFn:null,watch:!0,watchInterval:3e5,onFetchStart:null,onFetchEnd:null,onFetchError:null,debug:!1},s=!1,t=Object.keys(e),n,o=()=>{if(e.fetchFn)return e.onFetchStart&&e.onFetchStart(),e?.debug&&console.info(`ApiService::${e.serviceName||""}: start fetch`),s=!0,e.fetchFn().then(()=>{e.onFetchEnd&&e.onFetchEnd()}).catch(a=>{console.warn("ApiService::%s:%s",e.serviceName,a),e.onFetchError&&e.onFetchError(a)});e?.debug&&console.warn(`ApiService::${e.serviceName||""}: missing fetch function`)},d=a=>{s&&a.watch===e.watch&&a.watchInterval===e.watchInterval||(clearInterval(n),e.watch&&(n=setInterval(o,e.watchInterval||3e5)))};this.configure=a=>{let p={...e};e={...e,...a},Object.keys(e).forEach(l=>t.indexOf(l)<0&&delete e[l]),e?.debug&&console.debug("ApiService::%s: new config: %s",e.serviceName,e),d(p),e.initialFetch&&!s&&o()},this.fetch=o,this.configure(r)}var u=m;var c=class extends Error{constructor(e,s){super(s||e),this.name="HTTPError",this.statusCode=e}},A=r=>r.status<400?r:r.text().then(e=>{var s=new c(r.status,e||r.statusText);return s.statusCode=r.status,s.httperror=!0,Promise.reject(s)}),E={"Content-Type":"application/json",Accept:"application/json"},v=(r,e={})=>{let s={headers:E,...e};return fetch(r,s).then(A).then(t=>{let n=t.headers.get("Content-Type");return n&&n.includes("application/json")?t.json():t.text()})};var h=(r,e={})=>v(r,{method:"GET",...e});var f=r=>{let e={global:{total:0},regions:{}};return!r||r.length===0||r.forEach(s=>{e.global.total+=1;let t=s.labels?.region,n=s.labels?.severity,o=s.status?.state;e.global[n]=e.global[n]||0,e.global[n]+=1,e.regions[t]=e.regions[t]||{},e.regions[t].total=e.regions[t].total||0,e.regions[t].total+=1,e.regions[t][n]=e.regions[t][n]||{},e.regions[t][n].total=e.regions[t][n]?.total||0,e.regions[t][n].total+=1,o==="suppressed"&&(e.regions[t][n].suppressed=e.regions[t][n]?.suppressed||0,e.regions[t][n].suppressed+=1)}),e},g=r=>{let e=["critical","warning"];return r.sort((s,t)=>s.labels?.severity==="critical"&&t.labels?.severity!=="critical"||s.labels?.severity==="warning"&&e.indexOf(t.labels?.severity)<0?-1:s.labels?.severity===t.labels?.severity&&s.status?.state!==t.status?.state&&s.status?.state?s.status?.state.localeCompare(t.status?.state):s.labels?.severity===t.labels?.severity&&s.status?.state===t.status?.state&&s.startsAt!==t.startsAt&&t.startsAt?t.startsAt?.localeCompare(s.startsAt):s.labels?.severity===t.labels?.severity&&s.status?.state===t.status?.state&&s.startsAt===t.startsAt&&s.labels?.region?s.labels?.region?.localeCompare(t.labels?.region):1)};var i,S=(r,e={})=>h(`${r}/alerts`,{params:e.params}).then(s=>{let t=g(s);t.forEach(o=>{o.labels&&(o.labels.status=o.status?.state)}),e?.limit&&(e?.debug&&console.info("Alerts service: limit set: ",e?.limit),t=t.slice(0,e?.limit));let n=JSON.stringify(t);e?.debug&&console.info("Alerts service: any changes?",i!==n),i!==n?(i=n,e?.debug&&console.info("Alerts service: inform listener"),self.postMessage({action:"ALERTS_UPDATE",alerts:t,counts:f(t)})):e?.debug&&console.info("Alerts service: no change found")}),T=new u({serviceName:"alerts",debug:!0,onFetchStart:()=>self.postMessage({action:"ALERTS_FETCH_START"}),onFetchEnd:()=>self.postMessage({action:"ALERTS_FETCH_END"}),onFetchError:r=>{self.postMessage({action:"ALERTS_FETCH_ERROR",error:r.message})}});self.onmessage=r=>{switch(r?.data?.action||""){case"ALERTS_CONFIGURE":r?.data?.fetchVars?.apiEndpoint&&(r.data.fetchFn=()=>S(r.data?.fetchVars.apiEndpoint,r.data?.fetchVars.options||{})),T.configure(r?.data||{});break;case"ALERTS_FETCH":alertService.fetch();break}};
