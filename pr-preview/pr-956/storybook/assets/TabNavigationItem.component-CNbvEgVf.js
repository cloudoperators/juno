import{r as m,j as d}from"./iframe-BwHZHiNN.js";import{N as g,a as y}from"./NavigationItem.component-BOmO3w9Y.js";const N=`
  jn:flex
`,t=m.createContext(void 0),c=({activeItem:e,ariaLabel:n,children:i,className:l="",disabled:o=!1,onActiveItemChange:r,tabStyle:a="main",...s})=>d.jsx(t.Provider,{value:{tabStyle:a},children:d.jsx(g,{activeItem:e,ariaLabel:n,className:`
          juno-tabnavigation 
          juno-tabnavigation-${a} 
          ${N} 
          ${l}
        `,disabled:o,onActiveItemChange:r,...s,children:i})});try{t.displayName="TabNavigationContext",t.__docgenInfo={description:"",displayName:"TabNavigationContext",props:{}}}catch{}try{c.displayName="TabNavigation",c.__docgenInfo={description:"A Tab Navigation parent component. Use to wrap `<TabNavigationItem>` elements inside. For tabs with corresponding tab panels, use `<Tabs>` instead.",displayName:"TabNavigation",props:{activeItem:{defaultValue:null,description:"The label of the selected tab. The `activeItem` prop set on the parent will override / take precedence over any `active` prop that may be set on a child.",name:"activeItem",required:!1,type:{name:"ReactNode"}},ariaLabel:{defaultValue:null,description:'The aria-label of the navigation. Specify when there are more than one elements with an implicit or explicit `role="navigation"` on a page/view.',name:"ariaLabel",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The child `<TabNavigationItem>` elements to render.",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:{value:""},description:"A custom className to be rendered on the tab navigation",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Whether the tab navigation is disabled. If set to `true`, all child tab navigation item elements will be disabled.",name:"disabled",required:!1,type:{name:"boolean"}},onActiveItemChange:{defaultValue:null,description:"A handler to execute when the active tab changes",name:"onActiveItemChange",required:!1,type:{name:"((activeItem: ReactNode) => void)"}},tabStyle:{defaultValue:{value:"main"},description:'The stylistic variant of the Tabs: Use `main` as the first child in an `Appshell` (when manually scaffolding, as first child of `juno-content-container`). For tabs inside the page content use "content". `<TabNavigation tabStyle="main">` will have no darkened border on the bottom of inactive tabs, `tabStyle="content"` will.',name:"tabStyle",required:!1,type:{name:"enum",value:[{value:'"main"'},{value:'"content"'}]}}}}}catch{}const T=`
  jn:flex
  jn:items-center
  jn:text-theme-default
  jn:font-bold
  jn:py-[0.875rem]
  jn:px-[1.5625rem]
  jn:border-b-[3px]
  jn:focus-visible:outline-hidden
  jn:focus-visible:ring-2
  jn:focus-visible:ring-theme-focus
`,j=`
  jn:text-theme-high
  jn:font-bold
  jn:border-b-[3px]
  jn:border-theme-tab-active-bottom
`,v=({active:e=!1,ariaLabel:n,children:i,className:l="",disabled:o=!1,href:r,icon:a,label:s="",onClick:p,value:b="",...h})=>{const f=m.useContext(t),{tabStyle:u}=f||{};return d.jsx(y,{active:e,activeItemStyles:j,ariaLabel:n,className:`
        juno-tabnavigation-item 
        ${u?"juno-tabnavigation-"+u+"-item":""}
        ${T} 
        ${l}
      `,disabled:o,href:r,icon:a,inactiveItemStyles:`${u==="content"?"jn:border-theme-tab-content-inactive-bottom":"jn:border-transparent"}`,label:s,onClick:p,value:b,...h,children:i})};try{v.displayName="TabNavigationItem",v.__docgenInfo={description:"An individual Tab Navigation Item. Use wrapped in a `<TabNavigation>` parent component.",displayName:"TabNavigationItem",props:{active:{defaultValue:{value:"false"},description:"Whether the tab navigation item is active",name:"active",required:!1,type:{name:"boolean"}},ariaLabel:{defaultValue:null,description:"The aria label of the item",name:"ariaLabel",required:!1,type:{name:"string"}},children:{defaultValue:null,description:"The children to render. In order to make the navigation work, you also need to pass a `value` or `label` prop, or both.",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:{value:""},description:"Pass a custom className",name:"className",required:!1,type:{name:"string"}},disabled:{defaultValue:{value:"false"},description:"Whether the tab navigation item is disabled",name:"disabled",required:!1,type:{name:"boolean"}},href:{defaultValue:null,description:"",name:"href",required:!1,type:{name:"string"}},icon:{defaultValue:null,description:"Pass the name of an icon to render in the Tab. Can be any icon included with Juno.",name:"icon",required:!1,type:{name:"enum",value:[{value:'"info"'},{value:'"warning"'},{value:'"danger"'},{value:'"error"'},{value:'"success"'},{value:'"search"'},{value:'"accessTime"'},{value:'"accountCircle"'},{value:'"addCircle"'},{value:'"autoAwesomeMosaic"'},{value:'"autoAwesomeMotion"'},{value:'"bolt"'},{value:'"calendarToday"'},{value:'"cancel"'},{value:'"check"'},{value:'"checkCircle"'},{value:'"chevronLeft"'},{value:'"chevronRight"'},{value:'"close"'},{value:'"comment"'},{value:'"contentCopy"'},{value:'"dangerous"'},{value:'"default"'},{value:'"deleteForever"'},{value:'"description"'},{value:'"dns"'},{value:'"download"'},{value:'"edit"'},{value:'"errorOutline"'},{value:'"exitToApp"'},{value:'"expandLess"'},{value:'"expandMore"'},{value:'"filterAlt"'},{value:'"forum"'},{value:'"help"'},{value:'"home"'},{value:'"manageAccounts"'},{value:'"monitorHeart"'},{value:'"moreVert"'},{value:'"nightsStay"'},{value:'"notificationsOff"'},{value:'"openInBrowser"'},{value:'"openInNew"'},{value:'"place"'},{value:'"severityLow"'},{value:'"severityMedium"'},{value:'"severityHigh"'},{value:'"severityCritical"'},{value:'"upload"'},{value:'"wbSunny"'},{value:'"widgets"'}]}},label:{defaultValue:{value:""},description:"The label of the tab navigation item. Must be unique within any given `<TabNavigation>` group.",name:"label",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:"Pass a custom handler to execute when the tab is clicked",name:"onClick",required:!1,type:{name:"MouseEventHandler<HTMLElement>"}},value:{defaultValue:{value:""},description:"An optional technical identifier fort the tab. If not passed, the label will be used to identify the tab. NOTE: If value is passed, the value of the active tab MUST be used when setting the activeItem prop on the parent TabNavigation.",name:"value",required:!1,type:{name:"string"}}}}}catch{}export{c as T,v as a};
